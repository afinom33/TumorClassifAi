import asyncio
import aiohttp
import io
from PIL import Image
import numpy as np

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.enums import ChatAction

from config import TOKEN
from ultralytics import YOLO

bot = Bot(token=TOKEN)
dp = Dispatcher()

model = YOLO('best.pt')

@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        'üëã –ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å <b>—Å–Ω–∏–º–∫–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞</b>. '
        '–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–Ω–∏–º–æ–∫, –∏ —è —Å–∫–∞–∂—É –≤–∞–º, –µ—Å—Ç—å –ª–∏ –Ω–∞ –Ω–µ–º –æ–ø—É—Ö–æ–ª—å, –∏ –µ—Å–ª–∏ –¥–∞, —Ç–æ –∫–∞–∫–∞—è. '
        '\n\n‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤ <b>–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–µ</b>, –Ω–æ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑ –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω —Å—Ç–∞–≤–∏—Ç—å <b>–≤—Ä–∞—á</b>.',
        parse_mode='HTML'
    )


@dp.message(F.photo)
async def handle_photo(message: types.Message):
    photo = message.photo[-1]
    file_info = await bot.get_file(photo.file_id)
    file_path = file_info.file_path

    async with aiohttp.ClientSession() as session:
        async with session.get(f'https://api.telegram.org/file/bot{TOKEN}/{file_path}') as resp:
            photo_bytes = await resp.read()
    
    image = Image.open(io.BytesIO(photo_bytes))
    image_np = np.asarray(image)

    results = model(image_np)
    names = results[0].names
    translation_dict = {
        'glioma': '–≥–ª–∏–æ–º–∞',
        'meningioma': '–º–µ–Ω–∏–Ω–≥–∏–æ–º–∞',
        'notumor': '–Ω–µ—Ç –æ–ø—É—Ö–æ–ª–∏',
        'pituitary': '–æ–ø—É—Ö–æ–ª—å –≥–∏–ø–æ—Ñ–∏–∑–∞'
    }
    translated_result = translation_dict[names[results[0].probs.top1]]

    await message.answer("–ù–∞ –¥–∞–Ω–Ω–æ–º —Å–Ω–∏–º–∫–µ —Å –±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏: {}".format(translated_result))


async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')
